pipeline {

    agent any
    stages {
        /* mvn构建*/
        stage('Build') {
            agent {
               docker {
                  image 'maven:3-alpine'
                   args '-v $HOME/.m2:/root/.m2'
                   reuseNode true
                }
           }
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
         /* build镜像并发布到私有仓库中*/
        stage('Push') {
           agent none
    		steps {
    		  script {
    		        docker.withRegistry('https://yourgithub.com', 'dockerHarbor'){
    				docker.build('yourgithub.com/reponame/config-service:${BUILD_ID}', '-f config-service/src/main/docker/Dockerfile ./config-service').push('latest')
                    docker.build('yourgithub.com/reponame/discovery-service:${BUILD_ID}', '-f discovery-service/src/main/docker/Dockerfile ./discovery-service').push('latest')
                    
    			}
    		  }
    		}
        }
         /* 部署到远程服务器上*/
        stage('Deploy') {
    		steps {
    		  script {
    		      sshagent(credentials: ['jenkins-root']) {
    		        sh 'ssh -o StrictHostKeyChecking=no -l root 192.168.7.201 -p 2311 docker-compose -f /opt/docker/docker-compose.yml up -d'
                    }
    		  }
    		}
        }

    }

}
